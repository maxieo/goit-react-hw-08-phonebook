{"version":3,"file":"static/js/123.2b902825.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/styles/Contacts.styles.js","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items\nexport const getFilter = state => state.filter\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Label } from './ContactForm.styled'; \n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        return setName(e.target.value);\n      case 'number':\n        return setNumber(e.target.value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(option => {\n        return option.name === name;\n      })\n    ) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label>\n        <TextField\n          variant=\"outlined\"\n          label = \"Name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        <TextField\n          variant=\"outlined\"\n          label = \"Number\"\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\" variant='contained'>Add contact</Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n  return (\n    <li>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button type=\"button\" onClick={() => onDelete(contact.id)}>\n        Delete Contact\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from \"styled-components\";\n\nexport const ContactListWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`\n\nexport const ContactListStyle = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`","import React from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport { ContactListStyle } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filterContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n      <ContactListStyle>\n        {filterContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ContactListStyle>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from '../../redux/contacts/contactSlice';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = e => {\n    const filterValue = e.target.value;\n    dispatch(setFilterValue(filterValue));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" onChange={onChange} value={filter} />\n    </label>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 500px;\n`","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsWrapper } from './styles/Contacts.styles';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsWrapper>\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm />\n      </div>\n\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <p>Loading...</p>}\n        <ContactList />\n      </div>\n    </ContactsWrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","reset","onSubmit","preventDefault","find","option","alert","addContact","TextField","variant","label","type","onChange","pattern","title","required","Button","contact","onClick","id","deleteContact","ContactListStyle","styled","ContactList","filterContacts","toLowerCase","includes","map","Filter","filterValue","setFilterValue","ContactsWrapper","useEffect","fetchContacts"],"sourceRoot":""}